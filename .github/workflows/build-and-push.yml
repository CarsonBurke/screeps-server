name: Build and push to Docker Hub

on:
  schedule:
    - cron: "0 * * * *"
  push:
    paths:
      - "Dockerfile"
      - "screeps-cli.js"
      - "screeps-start.js"
    tags:
      - "v*.*.*"
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  precondition:
    name: Precondition
    runs-on: ubuntu-latest
    outputs:
      continue: ${{ steps.set_output.outputs.continue }}
    steps:
      - name: Fetch data
        run: curl "https://registry.npmjs.com/screeps/latest" | jq -r '.version' > version
      - name: Fetch Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: version
          key: ${{ hashFiles('version') }}
      - name: Check condition
        id: set_output
        run: |
          echo "::set-output name=continue::${{ steps.cache.outputs.cache-hit != 'true' || github.event_name != 'schedule' }}"

  release:
    name: Release
    needs: [precondition]
    if: needs.precondition.outputs.continue
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [10, 12]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          flavor: |
            latest=${{ github.event_name == 'schedule' && 'true' || 'auto' }}
            suffix=${{ format('{0}{1}',
              matrix.node != 10 && format('-node{0}', matrix.node) || '',
              inputs.variant && format('-{0}', inputs.variant) || ''
            ) }},onlatest=true
          images: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
          tags: |
            type=edge,branch=main
            type=ref,event=pr
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            NODE_VERSION=${{ matrix.node }}
          cache-from: |
            ${{
              format(
                'type=registry,ref={0}/{1}:buildcache-node{2},mode=max',
                secrets.DOCKER_HUB_USERNAME, github.event.repository.name, matrix.node
              )
            }}
          cache-to: |
            ${{
              format(
                'type=registry,ref={0}/{1}:buildcache-node{2},mode=max',
                secrets.DOCKER_HUB_USERNAME, github.event.repository.name, matrix.node
              )
            }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
