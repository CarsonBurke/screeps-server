name: Build and push to Docker Hub

on:
  push:
    paths:
      - "mods/**"
      - "Dockerfile"
    tags:
      - "v*.*.*"
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  docker:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [10, 12]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          flavor: |
            latest=auto
            suffix=${{ format('{0}{1}',
              matrix.node != 10 && format('-node{0}', matrix.node) || '',
              inputs.variant && format('-{0}', inputs.variant) || ''
            ) }},onlatest=true
          images: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
          tags: |
            type=edge,branch=main
            type=ref,event=pr
            type=semver,pattern={{major}}
            type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            NODE_VERSION=${{ matrix.node }}
          cache-from: |
            ${{
              format(
                'type=registry,ref={0}/{1}:buildcache-node{2},mode=max',
                secrets.DOCKER_HUB_USERNAME, github.event.repository.name, matrix.node
              )
            }}
          cache-to: |
            ${{
              format(
                'type=registry,ref={0}/{1}:buildcache-node{2},mode=max',
                secrets.DOCKER_HUB_USERNAME, github.event.repository.name, matrix.node
              )
            }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
